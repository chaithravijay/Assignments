
#include <iostream>
#include <fstream>
#include <limits>
#include <string.h>
#include <unistd.h>
using namespace std;
  

class acc {
private:
    char username[50];
    int password;
    int balance;
  
public:
    char* usernames(void)
    {
        
        return the username;
    }
  
    int passwords(void)
    {
       
        return password;
    }
  
    
    void getData(void)
    {
        cin.ignore(
            numeric_limits<streamsize>::max(),
            '\n');
        cout << "\nEnter username:";
  
        cin.getline(username, 30);
        cout << "\nEnter 4-digit "
             << "password:";
  
        cin >> password;
        cin.ignore(
            numeric_limits<streamsize>::max(),
            '\n');
        cout << "\nEnter initial"
             << " balance:";
  
        cin >> balance;
        cin.ignore(
            numeric_limits<streamsize>::max(),
            '\n');
    }
  
    
    void showData(void)
    {
        cout << "Username:" << username
             << ", Password:" << password
             << ", Balance:" << balance
             << endl;
    }
  
    
    int adduser();
    int viewallusers();
    int deleteuser(char*);
    void updateuserasdeposit(char*);
    void updateuseraswithdraw(char*);
    int searchspecificuser(char*, int);
    int searchallusertodisplay(char*);
};
  

void accUser()
{
    acc a;
  
    char uname[50];
    int pass, ch, ch1, ch2, found = 0;
  
mainmenu:
  
  
    cout << "\nAccount details";
    cout << "\nLogin as :\n1. Admin\n2."
         << " User\n3. "
            "Exit\nChoose one : ";
    cin >> ch;
  
    switch (ch) {
    case 1:
    rerun:
       
        cout << "\nEnter details to"
             << " login as Admin\n";
        cout << "\nEnter password:";
        cin >> pass;
        if (pass == 9876) {
        admin:
           
            cout << "\nWelcome to"
                 << " Admin Menu";
            cout << "\n1. Add User\n2."
                 << " Delete User\n3. "
                    "View All User\n4. "
                 << "Exit";
            cout << "\nSelect one : ";
            cin >> ch1;
            switch (ch1) {
            case 1:
                a.adduser();
                goto admin;
  
            case 2:
                cout << "\nEnter the "
                     << "Username to be "
                        "deleted : ";
                cin.ignore(
                    numeric_limits<streamsize>::max(),
                    '\n');
                cin.getline(uname, 50);
                a.deleteuser(uname);
                goto admin;
  
            case 3:
                a.viewallusers();
                
                goto admin;
  
            case 4:
                break;
            }
        }
        else {
            cout << "\nDetails are "
                 << "incorrect ! Please"
                    " try again";
            cin.get();
            goto rerun;
        }
        goto mainmenu;
  
    case 2:
       
        cout << "\n Enter details to"
             << " login as User\n";
  
        cin.ignore(
            numeric_limits<streamsize>::max(),
            '\n');
        cout << "Enter username:";
        cin.getline(uname, 50);
        cout << "\nEnter password:";
  
        cin >> pass;
        found = a.searchspecificuser(
            uname, pass);
  
        if (found) {
        user:
          
            cout << "\nWelcome "
                 << uname;
            cout << "\nWelcome to"
                 << " User Menu";
            cout << "\n1. Deposit\n2."
                 << " Withdraw\n3. View "
                    "Account\n4. "
                 << "Exit\nEnter your choice:";
            cin >> ch2;
  
            switch (ch2) {
            case 1:
                a.updateuserasdeposit(uname);
                goto user;
            case 2:
                a.updateuseraswithdraw(uname);
                goto user;
            case 3:
                a.searchallusertodisplay(uname);
              
                goto user;
            case 4:
                cout << "Thank you";
                break;
            }
        }
        else {
            cout << "\nNo account found"
                 << " with username "
                    ":(\n\nHit ENTER to continue "
                 << uname;
            cin.get();
        }
        goto mainmenu;
  
    case 3:
        cout << "\nThankyou for "
             << "banking with "
             << "Axis bank";
        cin.get();
        break;
    }
}
  

int acc::adduser()
{
    acc a;
  
    ofstream file;
  
   
    file.open("some.txt",
              ios::out | ios::app);
    if (!file) {
        cout << "Error in creating "
             << "file.." << endl;
        return 0;
    }
  
   
    a.getData();
  
    
    file.write((char*)&a, sizeof(a));
  
    
    file.close();
  
    return 0;
}
  

int acc::viewallusers()
{
  
    acc a;
  
    ifstream file1;
  
    file1.open("some.txt", ios::in);
    if (!file1) {
        cout << "Error in opening file..";
        return 0;
    }
  
    
    file1.read((char*)&a, sizeof(a));
    while (!file1.eof()) {
  
        
        a.showData();
        file1.read((char*)&a, sizeof(a));
    }
  
   
    file1.close();
    return 0;
}
  

int acc::deleteuser(char* uname)
{
  
    acc a;
  
    fstream original, temp;
    original.open("some.txt", ios::in);
    if (!original) {
        cout << "\nfile not found";
        return 0;
    }
    else {
        temp.open("temp.txt",
                  ios::out | ios::app);
        original.read((char*)&a, sizeof(a));
  
       
        while (!original.eof()) {
  
            if (!strcmp(a.usernames(),
                        uname)) {
                cout << "data found "
                     << "and deleted\n"
                     << a.username
                     << "\n";
            }
            else {
                temp.write((char*)&a,
                           sizeof(a));
            }
  
            original.read((char*)&a,
                          sizeof(a));
        }
  
        original.close();
        temp.close();
        remove("some.txt");
        rename("temp.txt", "some.txt");
        a.viewallusers();
    }
    return 0;
}
  

void acc::updateuserasdeposit(char* uname)
{
  
    acc a;
    fstream file, temp;
    file.open("some.txt",
              ios::in | ios::out | ios::ate);
    temp.open("temp.txt",
              ios::out | ios::app);
    file.seekg(0);
    file.read((char*)&a, sizeof(a));
  
   
    while (!file.eof()) {
        if (!strcmp(a.usernames(), uname)) {
            int b;
  
            cout << "\nEnter amount "
                 << "to deposit:";
            cin >> b;
            a.balance = a.balance + b;
            cout << "\nBalance is:"
                 << a.balance;
            temp.write((char*)&a, sizeof(a));
        }
        else {
            temp.write((char*)&a, sizeof(a));
        }
        file.read((char*)&a, sizeof(a));
    }
    file.close();
    temp.close();
    remove("some.txt");
    rename("temp.txt", "some.txt");
}
  

void acc::updateuseraswithdraw(char* uname)
{
  
    acc a;
    fstream file, temp;
    file.open("some.txt",
              ios::in | ios::out | ios::ate);
    temp.open("temp.txt",
              ios::out | ios::app);
    file.seekg(0);
    file.read((char*)&a, sizeof(a));
  
    
    while (!file.eof()) {
        if (!strcmp(a.usernames(), uname)) {
            int b;
            cout << "\nEnter amount "
                 << "to withdraw:";
            cin >> b;
            if (a.balance < b) {
                cout
                    << "\nInsufficient "
                    << "balance to withdraw";
            }
            else {
                a.balance = a.balance - b;
                temp.write((char*)&a,
                           sizeof(a));
                cout << "\nBalance is:"
                     << a.balance;
            }
        }
        else {
            temp.write((char*)&a,
                       sizeof(a));
        }
        file.read((char*)&a, sizeof(a));
    }
  
   
    file.close();
    temp.close();
    remove("some.txt");
    rename("temp.txt", "some.txt");
}
  

int acc::searchspecificuser(
    char* uname, int pass)
{
    acc a;
    fstream f;
  
   
    f.open("some.txt", ios::in);
    if (!f) {
        cout << "Error in opening file..";
        return 0;
    }
  
   
    f.read((char*)&a, sizeof(a));
    while (!f.eof()) {
  
        if (!strcmp(a.usernames(), uname)) {
            if (a.passwords() == pass) {
                return 1;
            }
        }
        f.read((char*)&a, sizeof(a));
    }
  
    
    f.close();
    return 0;
}
  

int acc::searchallusertodisplay(
    char* uname)
{
    acc a;
    fstream file1;
  
   
    file1.open("some.txt", ios::in);
    if (!file1) {
        cout << "Error in opening file..";
        return 0;
    }
  
    
    file1.read((char*)&a, sizeof(a));
    while (!file1.eof()) {
        if (!strcmp(a.usernames(), uname)) {
            a.showData();
            return 0;
        }
        file1.read((char*)&a, sizeof(a));
    }
  
    
    file1.close();
    return 0;
}
  

int main()
{
   
    accUser();
  
    return 0;
}